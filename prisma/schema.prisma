generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  deleted          Boolean           @default(false)
  wldNullifierHash String?           @unique
  firebaseId       String?           @unique
  WalletModule     Wallet[]
  UserSelectedNft  UserSelectedNft[]
}

enum SupportedChains {
  ETHEREUM
  POLYGON
  MUMBAI
}

model Nft {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @updatedAt
  deleted         Boolean         @default(false)
  name            String
  symbol          String
  link            String
  contractAddress String
  contractType    String
  collectionLogo  String
  chain           SupportedChains

  @@index([symbol, chain])
}

model UserSelectedNft {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  deleted      Boolean  @default(false)
  tokenId      String
  tokenAddress String
  chain        String
  walletId     String   @db.Uuid
  wallet       Wallet   @relation(fields: [walletId], references: [id])
  userId       String   @db.Uuid
  user         User     @relation(fields: [userId], references: [id])
}

enum WalletProvider {
  METAMASK
  KLIP
  PHANTOM
  WALLET_CONNECT
  WEMIX
}

model Wallet {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  deleted         Boolean           @default(false)
  userId          String            @db.Uuid
  user            User              @relation(fields: [userId], references: [id])
  publicAddress   String            @unique
  provider        WalletProvider
  UserSelectedNft UserSelectedNft[]
}
